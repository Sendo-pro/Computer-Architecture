library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;	 --to use unsigned function
USE ieee.numeric_std.ALL;		 --to use to_integer function

entity RegFile is
    Port (
        clk : in STD_LOGIC;
        regWrite : in STD_LOGIC;
        readReg1, readReg2, writeReg : in STD_LOGIC_VECTOR(4 downto 0);
        writeData : in STD_LOGIC_VECTOR(31 downto 0);
        dataOut1, dataOut2 : out STD_LOGIC_VECTOR(31 downto 0)
    );
end RegFile;

architecture Behavioral of RegFile is
    type RegisterArray is array (0 to 31) of STD_LOGIC_VECTOR(31 downto 0);
    signal registers : RegisterArray := (others => (others => '0'));
begin
    process(clk)
    begin
        if rising_edge(clk) then
            if regWrite = '1' then
                registers(to_integer(unsigned(writeReg))) <= writeData;
            end if;
        end if;
	if falling_edge(clk) then
		dataOut1 <= registers(to_integer(unsigned(readReg1)));
		dataOut2 <= registers(to_integer(unsigned(readReg2)));
	end if;
    end process;
end Behavioral;
